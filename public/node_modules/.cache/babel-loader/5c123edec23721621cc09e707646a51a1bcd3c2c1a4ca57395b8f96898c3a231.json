{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nvar Calendar = require('react-activity-calendar');\nfunction _interopDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefault(React);\nvar Calendar__default = /*#__PURE__*/_interopDefault(Calendar);\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\n// GitHub theme\nconst DEFAULT_THEME = {\n  light: ['#ebedf0', '#9be9a8', '#40c463', '#30a14e', '#216e39'],\n  dark: ['#161b22', '#0e4429', '#006d32', '#26a641', '#39d353']\n};\n\n// noinspection SuspiciousTypeOfGuard The caller might not use TypeScript\n\nconst transformData = (data, transformFn) => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n  const transformedData = transformFn(data);\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(`Required property \"count: number\" missing or invalid. Got: ${testObj.count}`);\n    }\n    if (!/\\d{4}-\\d{2}-\\d{2}/.test(testObj.date)) {\n      throw new Error(`Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`);\n    }\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(`Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`);\n    }\n  }\n  return transformedData;\n};\nasync function fetchCalendarData(username, year) {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error);\n  }\n  return data;\n}\nconst GitHubCalendar = _ref => {\n  var _props$theme;\n  let {\n    username,\n    year = 'last',\n    labels,\n    transformData: transformDataCallback,\n    transformTotalCount = true,\n    ...props\n  } = _ref;\n  const [data, setData] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const fetchData = React.useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year).then(setData).catch(setError).finally(() => setLoading(false));\n  }, [username, year]);\n  React.useEffect(fetchData, [fetchData]);\n  if (error) {\n    return /*#__PURE__*/React__default.default.createElement(\"div\", null, /*#__PURE__*/React__default.default.createElement(\"i\", null, \"Unable to fetch contribution data. See console.\"));\n  }\n  if (loading || !data) {\n    return /*#__PURE__*/React__default.default.createElement(Calendar.Skeleton, _extends({}, props, {\n      loading: true\n    }));\n  }\n  const theme = (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : DEFAULT_THEME;\n  const defaultLabels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`\n  };\n  const totalCount = year === 'last' ? data.total['lastYear'] : data.total[year];\n  return /*#__PURE__*/React__default.default.createElement(Calendar__default.default, _extends({\n    data: transformData(data.contributions, transformDataCallback),\n    theme: theme,\n    labels: Object.assign({}, defaultLabels, labels),\n    totalCount: transformDataCallback && transformTotalCount ? undefined : totalCount\n  }, props));\n};\nexports.default = GitHubCalendar;","map":{"version":3,"names":["API_URL","DEFAULT_THEME","light","dark","transformData","data","transformFn","transformedData","Array","isArray","Error","length","testObj","count","test","date","level","fetchCalendarData","username","year","response","fetch","json","ok","error","GitHubCalendar","_ref","_props$theme","labels","transformDataCallback","transformTotalCount","props","setData","React","useState","loading","setLoading","setError","fetchData","useCallback","then","catch","finally","useEffect","React__default","default","createElement","Calendar","Skeleton","_extends","theme","defaultLabels","totalCount","total","Calendar__default","contributions","Object","assign","undefined"],"sources":["C:\\Users\\rohit\\OneDrive\\Desktop\\vsCode\\rohit_kumar_pw10_061\\unit-7\\portfolio\\node_modules\\react-github-calendar\\src\\constants.ts","C:\\Users\\rohit\\OneDrive\\Desktop\\vsCode\\rohit_kumar_pw10_061\\unit-7\\portfolio\\node_modules\\react-github-calendar\\src\\utils.ts","C:\\Users\\rohit\\OneDrive\\Desktop\\vsCode\\rohit_kumar_pw10_061\\unit-7\\portfolio\\node_modules\\react-github-calendar\\src\\index.tsx"],"sourcesContent":["import { ThemeInput } from 'react-activity-calendar';\n\nexport const API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\n// GitHub theme\nexport const DEFAULT_THEME: ThemeInput = {\n  light: ['#ebedf0', '#9be9a8', '#40c463', '#30a14e', '#216e39'],\n  dark: ['#161b22', '#0e4429', '#006d32', '#26a641', '#39d353'],\n};\n","// noinspection SuspiciousTypeOfGuard The caller might not use TypeScript\n\nimport { Activity } from 'react-activity-calendar';\n\nimport { Props } from './index';\n\nexport const transformData = (\n  data: Array<Activity>,\n  transformFn?: Props['transformData'],\n): Array<Activity> => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  const transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(\n        `Required property \"count: number\" missing or invalid. Got: ${testObj.count}`,\n      );\n    }\n\n    if (!/\\d{4}-\\d{2}-\\d{2}/.test(testObj.date)) {\n      throw new Error(\n        `Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`,\n      );\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(\n        `Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`,\n      );\n    }\n  }\n\n  return transformedData;\n};\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport Calendar, { Activity, type Props as CalendarProps, Skeleton } from 'react-activity-calendar';\n\nimport { API_URL, DEFAULT_THEME } from './constants';\nimport { ApiErrorResponse, ApiResponse, Year } from './types';\nimport { transformData } from './utils';\n\nexport interface Props extends Omit<CalendarProps, 'data'> {\n  username: string;\n  year?: Year;\n  transformData?: (data: Array<Activity>) => Array<Activity>;\n  transformTotalCount?: boolean;\n}\n\nasync function fetchCalendarData(username: string, year: Year): Promise<ApiResponse> {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data: ApiResponse | ApiErrorResponse = await response.json();\n\n  if (!response.ok) {\n    throw new Error((data as ApiErrorResponse).error);\n  }\n\n  return data as ApiResponse;\n}\nconst GitHubCalendar: FunctionComponent<Props> = ({\n  username,\n  year = 'last',\n  labels,\n  transformData: transformDataCallback,\n  transformTotalCount = true,\n  ...props\n}) => {\n  const [data, setData] = useState<ApiResponse | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year)\n      .then(setData)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [username, year]);\n\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return (\n      <div>\n        <i>Unable to fetch contribution data. See console.</i>\n      </div>\n    );\n  }\n\n  if (loading || !data) {\n    return <Skeleton {...props} loading />;\n  }\n\n  const theme = props.theme ?? DEFAULT_THEME;\n\n  const defaultLabels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`,\n  };\n\n  const totalCount = year === 'last' ? data.total['lastYear'] : data.total[year];\n\n  return (\n    <Calendar\n      data={transformData(data.contributions, transformDataCallback)}\n      theme={theme}\n      labels={Object.assign({}, defaultLabels, labels)}\n      totalCount={transformDataCallback && transformTotalCount ? undefined : totalCount}\n      {...props}\n    />\n  );\n};\n\nexport default GitHubCalendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}